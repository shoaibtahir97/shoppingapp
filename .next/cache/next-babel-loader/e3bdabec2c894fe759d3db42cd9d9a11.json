{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from 'react-redux';\nimport { store, remove } from '../store';\nimport { List, ListItem, Divider, ListItemText, ListItemAvatar, ListItemSecondaryAction, IconButton, Avatar, Typography } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  },\n  listItem: {\n    padding: theme.spacing(1, 0),\n    justifyContent: \"flex-end\"\n  },\n  total: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.fontSize * 2\n  }\n}));\n\nconst Basket = () => {\n  const classes = useStyles({});\n  const products = useSelector(state => state);\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h6\",\n    color: \"primary\",\n    gutterBottom: true\n  }, \"Shopping Basket\"), __jsx(Typography, {\n    component: \"p\",\n    variant: \"body1\"\n  }, \"You have \", products.filter(product => product.added).length, \" items in your basket\"), __jsx(List, {\n    className: classes.root\n  }, products.filter(product => product.added).map(product => __jsx(React.Fragment, {\n    key: product.id\n  }, __jsx(ListItem, {\n    alignItems: \"flex-start\"\n  }, __jsx(ListItemAvatar, null, __jsx(Avatar, {\n    alt: \"Product\",\n    src: product.imageUrl\n  })), __jsx(ListItemText, {\n    primary: product.title,\n    secondary: __jsx(React.Fragment, null, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\"\n    }, \"\\xA3\", (product.price / 100).toFixed(2)), ` â€” ${product.description}`)\n  }), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => {\n      store.dispatch(remove({\n        id: product.id\n      }));\n    }\n  }, __jsx(DeleteIcon, null)))), __jsx(Divider, {\n    variant: \"inset\",\n    component: \"li\"\n  }))), __jsx(ListItem, {\n    className: classes.listItem\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: classes.total\n  }, \"\\xA3\", (products.filter(product => product.added).reduce((acc, current) => acc += current.price, 0) / 100).toFixed(2)))));\n};\n\nexport { Basket };","map":null,"metadata":{},"sourceType":"module"}