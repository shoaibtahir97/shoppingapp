{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { INITIAL_STATE } from \"./state\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nvar basketSlice = createSlice({\n  name: \"basket\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    add: function add(state, action) {\n      return state.map(function (item) {\n        if (item.id !== action.payload.id) {\n          return item;\n        }\n\n        return _objectSpread({}, item, {\n          added: true\n        });\n      });\n    },\n    remove: function remove(state, action) {\n      return state.map(function (item) {\n        if (item.id !== action.payload.id) {\n          return item;\n        }\n\n        return _objectSpread({}, item, {\n          added: false\n        });\n      });\n    }\n  }\n});\nvar store = configureStore({\n  reducer: basketSlice.reducer\n});\nvar _basketSlice$actions = basketSlice.actions,\n    add = _basketSlice$actions.add,\n    remove = _basketSlice$actions.remove;\nexport { add, remove };\nexport { basketSlice, store };","map":{"version":3,"sources":["/home/shoaib/Documents/Bootcamp2020/shopping-basket-tutorial-starter/store/index.ts"],"names":["INITIAL_STATE","createSlice","configureStore","basketSlice","name","initialState","reducers","add","state","action","map","item","id","payload","added","remove","store","reducer","actions"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,SAA9B;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,kBAA1C;AAEA,IAAMC,WAAW,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,QADsB;AAE5BC,EAAAA,YAAY,EAAEL,aAFc;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,aAACC,KAAD,EAAQC,MAAR,EAAmB;AACtB,aAAOD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD;;AAED,iCACKA,IADL;AAEEG,UAAAA,KAAK,EAAE;AAFT;AAID,OATM,CAAP;AAUD,KAZO;AAaRC,IAAAA,MAAM,EAAE,gBAACP,KAAD,EAAQC,MAAR,EAAmB;AACzB,aAAOD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD;;AAED,iCACKA,IADL;AAEEG,UAAAA,KAAK,EAAE;AAFT;AAGD,OARM,CAAP;AASD;AAvBO;AAHkB,CAAD,CAA/B;AA+BA,IAAME,KAAK,GAAGd,cAAc,CAAC;AACzBe,EAAAA,OAAO,EAAEd,WAAW,CAACc;AADI,CAAD,CAA5B;2BAI6Bd,WAAW,CAACe,O;IAA3BX,G,wBAAAA,G;IAAKQ,M,wBAAAA,M;;AAEnB,SAAQZ,WAAR,EAAqBa,KAArB","sourcesContent":["import { INITIAL_STATE } from \"./state\";\nimport {createSlice, configureStore} from '@reduxjs/toolkit';\n\nconst basketSlice = createSlice({\n    name: \"basket\",\n    initialState: INITIAL_STATE,\n    reducers: {\n      add: (state, action) => {\n        return state.map(item => {\n          if (item.id !== action.payload.id) {\n            return item\n          }\n  \n          return {\n            ...item,\n            added: true\n          }\n        })\n      },\n      remove: (state, action) => {\n        return state.map(item => {\n          if (item.id !== action.payload.id) {\n            return item\n          }\n  \n          return {\n            ...item,\n            added: false        }\n        })\n      }\n    }\n  })\n\n\nconst store = configureStore({\n    reducer: basketSlice.reducer\n})\n\nexport const {add, remove} = basketSlice.actions\n\nexport {basketSlice, store}"]},"metadata":{},"sourceType":"module"}